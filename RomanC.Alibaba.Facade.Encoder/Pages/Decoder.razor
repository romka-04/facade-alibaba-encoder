@page "/decode"
@inject IEncoderService  EncoderService

<EditForm Model="@_model" OnValidSubmit="@HandleValidSubmit">
    <div class="form-group">
        <label for="messageContentXml">Raw HTTP Request Body</label>
        <InputTextArea id="messageContentXml" class="form-control" rows="10" @bind-Value="_model.Message" />
        <small id="messageContentXmlHelp" class="form-text text-muted">The message to parse on parts.</small>
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-primary" type="submit" disabled="@(!context.Validate() || !context.IsModified())">Decode</button>
</EditForm>
<hr />
<div class="form-group">
    <label for="messageContentXml">Message Content (XML)</label>
    <XmlTextArea Value="@_decodedMsg.MessageContentXml"></XmlTextArea>
</div>
<div class="form-group">
    <label for="messageType">Message Type</label>
    <text id="messageType" class="form-control" readonly="readonly">
        @_decodedMsg.MessageType
    </text>
</div>
<div class="form-group">
    <label for="signature">Message Signature</label>
    <text id="signature" class="form-control"  readonly="readonly">
        @_decodedMsg.Signature
    </text>
</div>


@code {
    private DecodeViewModel _model = new();
    private CainiaoMessage _decodedMsg = CainiaoMessage.Empty;
    private bool HasDecodedMsg => CainiaoMessage.Empty != _decodedMsg;

    private void HandleValidSubmit()
    {
        _decodedMsg = EncoderService.Decode(_model.Message);
    }
}